{"version":3,"sources":["Components/Header.js","Components/Navbar.js","Components/About.js","Components/Projects.js","Components/Contact.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","class","alt","activeClass","to","spy","smooth","offset","duration","Navbar","scrollToTop","scroll","id","onClick","this","Component","About","Projects","Contact","Footer","App","options","particlesOptions","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sMA2BeA,EAxBD,WACV,OACI,qBAAKC,UAAU,SAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKC,IAAI,cAAcC,MAAM,cAAcC,IAAI,iBAC/C,qBAAIH,UAAU,UAAd,4BAAuC,sBAAMA,UAAU,OAAhB,0BAAvC,IAAkF,uBAAlF,4DACA,cAAC,OAAD,CACII,YAAY,SACZC,GAAG,MACHC,KAAK,EACLC,QAAQ,EACRC,OAAQ,EACRC,SAAU,IANd,SAQI,qBAAKT,UAAU,WAAf,wC,QCbCU,E,4MACnBC,YAAc,WACZC,gBAAOD,e,uDAIP,OACE,qBAAKX,UAAU,MAAMa,GAAG,SAAxB,SACE,qBAAKb,UAAU,cAAf,SACE,qBAAIA,UAAU,YAAd,UACE,cAAC,IAAD,CACEA,UAAU,YACVG,IAAI,OACJW,QAASC,KAAKJ,cAEhB,oBAAIX,UAAU,WAAd,SACE,cAAC,OAAD,CACEI,YAAY,SACZC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,IANZ,qBAWF,oBAAIT,UAAU,WAAd,SACE,cAAC,OAAD,CACEI,YAAY,SACZC,GAAG,WACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,IANZ,wBAWF,oBAAIT,UAAU,WAAd,SACE,cAAC,OAAD,CACEI,YAAY,SACZC,GAAG,UACHC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,IANZ,kC,GAxCsBO,aCMrBC,EARF,WACT,OACI,qBAAKjB,UAAU,QAAf,SACI,yBCaGkB,EAhBC,WACZ,OACI,qBAAKlB,UAAU,WAAf,SACI,+mHCKGmB,EARA,WACX,OACI,qBAAKnB,UAAU,UAAf,SACI,wCCKGoB,EARA,WACX,OACA,qBAAKpB,UAAU,SAAf,SACG,gD,yBCwBQqB,E,uKAhBX,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,IAAD,CAAWsB,QAASC,IACpB,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKvB,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,c,GAXQgB,aCCEQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.3cad0bb1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nconst Header =()=> {\r\n    return(\r\n        <div className=\"header\">\r\n            <div className=\"profile\">\r\n                <img src=\"jihnpk.jpeg\" class=\"profile-pic\" alt=\"Ji Hoon Park\" />\r\n                <h1 className=\"landing\">Hi, my name is <span className=\"name\">Ji Hoon Park</span>.<br></br>I'm a Computer Science major at Binghamton University.</h1>\r\n                <Link\r\n                    activeClass=\"active\"\r\n                    to=\"nav\"\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={0}\r\n                    duration={500}\r\n                >\r\n                    <div className=\"continue\">\r\n                    Check out my work!\r\n                    </div>\r\n                    \r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport { FaArrowUp } from 'react-icons/fa';\n\nexport default class Navbar extends Component {\n  scrollToTop = () => {\n    scroll.scrollToTop();\n  };\n\n  render() {\n    return (\n      <nav className=\"nav\" id=\"navbar\">\n        <div className=\"nav-content\">\n          <ul className=\"nav-items\">\n            <FaArrowUp\n              className=\"nav-arrow\"\n              alt=\"Logo\"\n              onClick={this.scrollToTop}\n            />\n            <li className=\"nav-item\">\n              <Link\n                activeClass=\"active\"\n                to=\"about\"\n                spy={true}\n                smooth={true}\n                offset={-62}\n                duration={500}\n              >\n                About\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                activeClass=\"active\"\n                to=\"projects\"\n                spy={true}\n                smooth={true}\n                offset={-62}\n                duration={500}\n              >\n                Projects\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                activeClass=\"active\"\n                to=\"contact\"\n                spy={true}\n                smooth={true}\n                offset={-62}\n                duration={500}\n              >\n                Contact\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React from \"react\";\r\n\r\nconst About =()=> {\r\n    return(\r\n        <div className=\"about\">\r\n            <p></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\n\r\nconst Projects =()=> {\r\n    return(\r\n        <div className=\"projects\">\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis gravida turpis nec luctus convallis. Nulla leo nisi, facilisis a viverra vel, euismod in ante. Nulla dui tellus, faucibus quis lectus eu, convallis ultrices augue. Nullam id nisl nunc. Praesent eros dolor, pharetra pulvinar condimentum ac, convallis sed odio. Ut congue arcu eu congue mattis. In ornare mattis sollicitudin. Sed facilisis, nisi non consequat dapibus, neque leo pharetra sapien, a ullamcorper lectus lorem vitae erat. Suspendisse at leo quis eros sodales sodales. Vivamus maximus est eu nulla rutrum, congue suscipit purus dictum. Phasellus nisi arcu, dictum a ligula nec, sodales fermentum lectus. Maecenas placerat magna lectus, sed porta velit placerat bibendum. Aliquam dapibus in magna vulputate feugiat.\r\n\r\nMaecenas lacinia dui et posuere rhoncus. Nullam neque lectus, egestas eget libero quis, bibendum pellentesque libero. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Praesent eu enim neque. Sed eu lacus vitae enim efficitur convallis. Aliquam vitae massa laoreet, lacinia urna quis, sodales sem. Cras congue efficitur dui eget accumsan. Aenean euismod accumsan ligula, quis facilisis risus dapibus sit amet. In quis sem vitae enim suscipit vehicula. Sed eget nunc hendrerit, efficitur lorem quis, rhoncus augue. Cras varius est quis nisl vehicula, a eleifend risus ultrices. Nam ac risus vitae nibh tincidunt pretium vitae ac ligula. In hac habitasse platea dictumst. Duis eget tortor fringilla risus suscipit tristique. Maecenas mollis, elit vitae cursus semper, dui ex ultricies odio, eu rutrum sapien ipsum a diam. Cras rhoncus pretium elit, sit amet vestibulum purus blandit et.\r\n\r\nPellentesque congue sagittis nibh, ac tempus orci sagittis vitae. Nam ac dapibus ligula. In non sapien quis nulla lobortis volutpat. Sed sollicitudin felis sapien, et auctor nulla venenatis a. Maecenas ultricies lobortis velit, sed fringilla augue interdum et. Suspendisse erat sapien, gravida vel molestie vel, bibendum fringilla turpis. Quisque porta at tortor non placerat. Nunc quis maximus nunc, at pretium ante. Curabitur elementum mi at neque accumsan, eget viverra sem scelerisque. Etiam at malesuada justo. Cras a suscipit orci, et laoreet turpis. Fusce venenatis, nulla in malesuada viverra, purus felis volutpat lorem, sit amet dictum velit nibh a nulla. Mauris sit amet mi eros. In rhoncus justo vel lacus feugiat, ut lacinia justo ornare. Vestibulum in laoreet tellus, non finibus orci. Cras pharetra blandit dui, in pharetra velit tristique a.\r\n\r\nAliquam nisl erat, malesuada a mauris ut, pharetra gravida nunc. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed quis sem ac purus viverra scelerisque. Praesent volutpat nisl et mi vehicula, quis pellentesque neque mollis. Curabitur nec mauris ut erat luctus rutrum. Etiam vestibulum sapien lectus, sit amet dictum leo commodo eu. Ut rhoncus commodo nisl. Maecenas lacinia lorem quam, sodales ornare odio ullamcorper eu. Aliquam erat volutpat. Nullam non augue volutpat, accumsan mauris non, viverra libero.\r\n\r\nSed enim arcu, cursus nec mi nec, tincidunt porta erat. Proin a auctor odio. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Fusce posuere lacus et magna interdum, eget blandit metus viverra. Etiam nec euismod eros. Etiam nec gravida purus. Pellentesque vitae lorem interdum, sollicitudin velit sit amet, iaculis nulla. Fusce eu viverra dolor. In vitae sapien ac orci ultricies porta sed at dolor. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Vestibulum rhoncus in ante ac facilisis.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React from \"react\";\r\n\r\nconst Contact =()=> {\r\n    return(\r\n        <div className=\"contact\">\r\n            <p>word</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return(\r\n    <div className=\"footer\">\r\n       <p>Footer stuff</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport Navbar from \"./Components/Navbar\";\nimport About from \"./Components/About\";\nimport Projects from \"./Components/Projects\";\nimport Contact from \"./Components/Contact\";\nimport Footer from \"./Components/Footer\";\nimport Particles from \"react-tsparticles\";\nimport particlesOptions from \"./particles.json\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles options={particlesOptions}/>\n        <Header />\n        <Navbar />\n        <div className=\"body\">\n          <About />\n          <Projects />\n          <Contact />\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}